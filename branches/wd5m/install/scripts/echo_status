#!/bin/bash
###########################################################
#                                                         #                  
#  Released under the GNU Public License                  #                  
#                                                         #                  
#  Script  :  echo_status                                 #
#  Author  :  Marcus Xenakis WA2DCI                       #
#  Version :  .16 Beta                                    #
#  Date    :  3/22/03                                     #
#  About   :  This script tests to see if we are in an    #
#             active EchoLink call amd reports status as  #
#             "busy" to EchoLink                          #
# Modified :  3/15/03 clean up files after time-out       #
#             3/25/03 WA6RQD change awk call for 6.2      #
#                                                         #
###########################################################

# Make sure we are user repeater!!!
if [ `/usr/bin/whoami` != "repeater" ] ; then
  echo This program must be run as user REPEATER!
  exit 1
fi

# Make sure we have sourced the environment file
if [ "$RUN_ENV" != "TRUE" ] ; then
  . /home/irlp/custom/environment
fi

# Make sure we have sourced the EchoLinux environment file
if [ "$ECHO_ENV" != "TRUE" ] ; then
  echo "You must add EchoIRLP environment variables to the environment file."
  echo "Check your installtion instructions."
  exit 1
fi

# Exits if node is not enabled
if [ ! -f "$LOCAL"/enable -o ! -f "$LOCAL"/echo_enable ] ; then 
  echo "The node is not enabled"
  exit 0
fi

# Clean-up in case we timed-out
if [ ! -f "$LOCAL"/active -a -f "$LOCAL"/echo_active ] ; then 
  rm -f "$LOCAL"/echo_active
  rm -f "$LOCAL"/echo_call
  rm -f "$LOCAL"/node_id
  # next line to be removed for the full EchoLinux
  "$ECHO_BIN"/echostatus $ECHO_SERVER O
fi

# Get Echolink Status
if [ -f "$ECHOLINUX"/echo_hosts ] ; then
  rm "$ECHOLINUX"/echo_hosts
fi   

# Are we EchoLink active? 
if [ -f "$LOCAL"/echo_active ] ; then
  # Refresh Status
  "$ECHO_BIN"/echostatus $ECHO_SERVER R > "$ECHOLINUX"/echo_hosts
  NODE_CALL=`cat "$LOCAL"/echo_call`
  "$ECHO_BIN"/echostatus $ECHO_SERVER B $NODE_CALL
else
  # Logon, Refresh status, then logoff
  "$ECHO_BIN"/echostatus $ECHO_SERVER S > "$ECHOLINUX"/echo_hosts
fi

# Check retrieved status page size modified for 6.2
eval `ls -la "$ECHOLINUX"/echo_hosts | awk '{print "SIZE="substr($0,34,9)+0 }'`

if [ "$SIZE" -gt "1500" ] ; then
   if [ "$1" = "update" ] ; then "$ECHO_SCRIPT"/echo_wavplay beep_on ; fi
   if [ -f "$ECHO_SCRIPT"/echo_upload ] ; then "$ECHO_SCRIPT"/echo_upload ; fi
else 
  if [ "$1" = "update" ] ; then "$ECHO_SCRIPT"/echo_wavplay beep_off ; fi
fi  

exit 0

