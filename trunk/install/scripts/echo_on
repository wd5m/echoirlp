#!/bin/bash
###########################################################
#                                                         #                  
#  Released under the GNU Public License                  #                  
#                                                         #                  
#  Script   :  echo_on                                    #
#  Author   :  Marcus Xenakis WA2DCI                      #
#  Version  :  .15 Beta                                   #
#  Date     :  3/20/03                                    #
#  About    :  A script that is forked by a call process  #
#  Modified :  4/8/03 changed wavgen of stationid.wav     #
#                                                         #
###########################################################

# Make sure we are user repeater!!!
if [ `/usr/bin/whoami` != "repeater" ] ; then
  echo This program must be run as user REPEATER!
  exit 1
fi

# Make sure we have sourced the environment file
if [ "$RUN_ENV" != "TRUE" ] ; then
  . /home/irlp/custom/environment
fi

# Make sure we have sourced the EchoLinux environment file
if [ "$ECHO_ENV" != "TRUE" ] ; then
  echo "You must add EchoIRLP environment variables to the environment file."
  echo "Check your installtion instructions."
  exit 1
fi

# Exits if node is not enabled
if [ ! -f "$LOCAL"/enable -o ! -f "$LOCAL"/echo_enable ] ; then 
  echo "The node is not enabled"
  exit 0
fi

$SCRIPT/statupdate

# Set WA2DCI status page with EchoLink info
eval `echo "$3" | awk '{print "NODE="substr($NODE,4,4)}'`
PARM=$NODE:$CALLSIGN:$1:$2
URL="http://xenakis.net/wa2dci/echoirlp/statupdate.php?"
#lynx -auth=zombo:swazzi -source "$URL$PARM" > /dev/null

STATIONID=`cat "$LOCAL"/active`
# Set IRLP wav file time-out and connected message
# It is copied each time because IRLP resets it. 
cp "$ECHO_AUDIO"/echolink.ul /tmp/echolink.ul
cat /tmp/temp.ul >> /tmp/echolink.ul
sox /tmp/echolink.ul "$AUDIO"/"$STATIONID"off.wav

# Set EchoLink status
if [ "$ECHO_SERVERS" = "YES" ] && [ ! -f "$LOCAL"/echoirlp ] ; then
   # Logon and Set EchoLink Status to BUSY
   echo "Set EchoLink status BUSY"
   "$ECHO_BIN"/echostatus $ECHO_SERVER B $2
fi   

# Log connection
echo "Node Connected to EchoLink node $1 $2"
echo `date '+%b %d %Y %T %z'` "Node Connected to EchoLink $1 $2" >> $LOGFILE

exit 0
